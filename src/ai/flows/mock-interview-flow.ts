
'use server';

/**
 * @fileOverview Simulates a mock interview with an AI interviewer.
 * This flow now generates the first question for a mock interview.
 *
 * - getFirstInterviewQuestion - A function that generates the first interview question.
 * - InterviewConfigInput - The input type for generating the question (resume, job description).
 * - FirstQuestionOutput - The return type, containing the first question.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const InterviewConfigInputSchema = z.object({
  resume: z
    .string()
    .describe('The resume of the candidate, as a data URI that must include a MIME type and use Base64 encoding. Expected format: \'data:<mimetype>;base64,<encoded_data>\'.'),
  jobDescription: z.string().describe('The job description for the role the candidate is interviewing for.'),
});
export type InterviewConfigInput = z.infer<typeof InterviewConfigInputSchema>;

const FirstQuestionOutputSchema = z.object({
  firstQuestion: z.string().describe("The first interview question generated by the AI interviewer based on the candidate's resume and the job description."),
});
export type FirstQuestionOutput = z.infer<typeof FirstQuestionOutputSchema>;

export async function getFirstInterviewQuestion(input: InterviewConfigInput): Promise<FirstQuestionOutput> {
  return firstQuestionFlow(input);
}

const firstQuestionPrompt = ai.definePrompt({
  name: 'firstQuestionPrompt',
  input: {schema: InterviewConfigInputSchema},
  output: {schema: FirstQuestionOutputSchema},
  prompt: `You are an AI Interviewer.
Based on the candidate's resume and the provided job description, your task is to generate the *first* relevant interview question to start the mock interview.

Job Description:
{{{jobDescription}}}

Candidate's Resume:
{{media url=resume}}

Please provide only the first question.
`,
});

const firstQuestionFlow = ai.defineFlow(
  {
    name: 'firstQuestionFlow',
    inputSchema: InterviewConfigInputSchema,
    outputSchema: FirstQuestionOutputSchema,
  },
  async (input) => {
    const {output} = await firstQuestionPrompt(input);
    return output!;
  }
);
